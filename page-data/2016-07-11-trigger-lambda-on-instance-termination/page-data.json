{"componentChunkName":"component---src-templates-blog-post-js","path":"/2016-07-11-trigger-lambda-on-instance-termination/","result":{"data":{"site":{"siteMetadata":{"title":"Blog","author":"Nick Ma"}},"markdownRemark":{"id":"cbafecb7-7a13-5f30-8a0a-ec81a497aa0d","excerpt":"Introduction So going on call, we had autoscaling groups that will terminate instances when they fail ELB health checks.\nBy the time that we got to the…","html":"<h1>Introduction</h1>\n<p>So going on call, we had autoscaling groups that will terminate instances when they fail ELB health checks.\nBy the time that we got to the instances, they were already terminated and we have no access to the logs.</p>\n<p>My ideal solution would be to find time to setup the Elasticsearch LogStash Kibana (ELK) stack. Though since,\nthe company only had 15 developers and only 2 of them know how the infrastructure works. The idea won’t get much\ntraction. For a working ELK come to fruition we needed to pull hours of research outside of working hours\nwithout support.\nThis wasn’t something I wanted to do, since it will affect my ability to do actual assigned work, as much as it pains\nme, I need to get things done and clear time to pursue other options.</p>\n<p>So for the simplest thing that gets 80 percent of the results, I used a SNS triggered lambda function to scrap all\nlogs for terminating instances. This is done through the use of AWS Autoscaling’s Lifecycle hooks.</p>\n<p><img src=\"http://docs.aws.amazon.com/autoscaling/latest/userguide/images/lifecycle_hooks.png\" alt=\"lifecycle-hooks\"></p>\n<p>For every AutoScaling Group, there are listeners on these event hooks that can be used to program in behaviour.\nIn my example I setup a termination hook on the Cloudformation containing all my AutoScaling Groups.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"Group1LifeCycleTerminationHook\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"AWS::AutoScaling::LifecycleHook\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"AutoScalingGroupName\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Ref\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Group1ServerGroup\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"HeartbeatTimeout\"</span><span class=\"token operator\">:</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"LifecycleTransition\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"autoscaling:EC2_INSTANCE_TERMINATING\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"NotificationTargetARN\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Ref\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TerminationHookSNSTopic\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"RoleARN\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Ref\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"TerminationHookRole\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can setup the LifeCycle through the\n<a href=\"http://docs.aws.amazon.com/cli/latest/reference/autoscaling/put-lifecycle-hook.html\">CLI</a><br>\nas well, but there is no UI for this feature during the writing of this blog post.</p>\n<p>This function is then scheduled to trigger an\n<a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/install-ssm-agent.html\">AWS SSM agent</a> script to scrape all my logs.\non my cluster of servers. Essentially, this agent awaits commands from the AWS SSM scheduler and executes preapproved\nscripts on the specific set of EC2 machines.</p>\n<p>On each of my server provisioners on CloudFormation, I added the ssm-agent bootstrap script. So that the servers\nrespond to SSM requests.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"/opt/ssm/install-ssm-agent.sh\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"Fn::Join\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"#!/bin/bash\\n\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"cd /tmp\\n\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"curl https://amazon-ssm-\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Ref\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"AWS::Region\"</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\".s3.amazonaws.com/latest/linux_amd64/amazon-ssm-agent.rpm -o amazon-ssm-agent.rpm\\n\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"yum install -y amazon-ssm-agent.rpm\\n\"</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"owner\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"mode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"000755\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I then setup my SSM Document to perform a task, and upload it to the SSM document store.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"Content\"</span><span class=\"token operator\">:</span> \"<span class=\"token punctuation\">{</span>\n        \\\"schemaVersion\\\"<span class=\"token operator\">:</span> \\\"<span class=\"token number\">1.2</span>\\\"<span class=\"token punctuation\">,</span>\n    \\\"description\\\"<span class=\"token operator\">:</span> \\\"Clean up jobs for a terminating instance.\\\"<span class=\"token punctuation\">,</span>\n    \\\"parameters\\\"<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    \\\"runtimeConfig\\\"<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        \\\"aws<span class=\"token operator\">:</span>runShellScript\\\"<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        \\\"properties\\\"<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            \\\"id\\\"<span class=\"token operator\">:</span> \\\"<span class=\"token number\">0.</span>aws<span class=\"token operator\">:</span>runShellScript\\\"<span class=\"token punctuation\">,</span>\n          \\\"runCommand\\\"<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                \\\"echo '===CATALINA.OUT==='\\\"<span class=\"token punctuation\">,</span>\n                \\\"tail -n <span class=\"token number\">1000</span> /var/log/tomcat/catalina.out || <span class=\"token boolean\">true</span>\\\"<span class=\"token punctuation\">,</span>\n                \\\"echo '===JETTY.LOGs==='\\\"<span class=\"token punctuation\">,</span>\n                \\\"tail -n <span class=\"token number\">1000</span> /var/log/jetty/`ls /var/log/jetty/ | sort -r | head -n <span class=\"token number\">1</span>` || <span class=\"token boolean\">true</span>\\\"<span class=\"token punctuation\">,</span>\n                \\\"echo '===FREEMEMORY==='\\\"<span class=\"token punctuation\">,</span>\n                \\\"free -m\\\"<span class=\"token punctuation\">,</span>\n                \\\"echo '===DOCKER-INSPECT==='\\\"<span class=\"token punctuation\">,</span>\n                \\\"docker inspect tomcat || <span class=\"token boolean\">true</span>\\\"<span class=\"token punctuation\">,</span>\n                \\\"docker inspect jetty || <span class=\"token boolean\">true</span>\\\"<span class=\"token punctuation\">,</span>\n                \\\"echo '===FILE DESCRIPTORS==='\\\"<span class=\"token punctuation\">,</span>\n                \\\"lsof | wc -l\\\"\n                  <span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\"<span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scrape-terminating-instance-logs\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">aws --profile prod ec2 ssm create-document --content file://scrape-terminating-instance-logs.json --name <span class=\"token string\">\"scrape-terminating-instance-logs\"</span></code></pre></div>\n<p>Now I trigger the SSM run from my Lambda Method, and setting the SNS notfication as the Lambda Method trigger.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> __future__ <span class=\"token keyword\">import</span> print_function\n\n<span class=\"token keyword\">import</span> json\n\n<span class=\"token comment\"># Message Sample</span>\n<span class=\"token triple-quoted-string string\">'''\nService: AWS Auto Scaling\nTime: 2016-01-27T15:23:47.581Z\nRequestId: reqid\nLifecycleActionToken: someToken\nAccountId: 123\nAutoScalingGroupName: Group1\nLifecycleHookName: Group1LifeCycleTerminationHook\nEC2InstanceId: i-1ba03992\nLifecycleTransition: autoscaling:EC2_INSTANCE_TERMINATING\nNotificationMetadata: null\n'''</span>\nASG_NAME_KEY<span class=\"token operator\">=</span><span class=\"token string\">'AutoScalingGroupName'</span>\nEC2_INSTANCE_ID_KEY<span class=\"token operator\">=</span><span class=\"token string\">'EC2InstanceId'</span>\n<span class=\"token keyword\">import</span> boto3\n\nclient <span class=\"token operator\">=</span> boto3<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">(</span><span class=\"token string\">'ssm'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">lambda_handler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'boto3 version: %s'</span> <span class=\"token operator\">%</span> boto3<span class=\"token punctuation\">.</span>__version__<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#print(\"Received event: \" + json.dumps(event, indent=2))</span>\n    message <span class=\"token operator\">=</span> event<span class=\"token punctuation\">[</span><span class=\"token string\">'Records'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Sns'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Message'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n\n    json_message <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n    asg_name <span class=\"token operator\">=</span> json_message<span class=\"token punctuation\">[</span>ASG_NAME_KEY<span class=\"token punctuation\">]</span>\n    ec2_id <span class=\"token operator\">=</span> json_message<span class=\"token punctuation\">[</span>EC2_INSTANCE_ID_KEY<span class=\"token punctuation\">]</span>\n\n    response <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span>send_command<span class=\"token punctuation\">(</span>\n        InstanceIds<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n            ec2_id<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        DocumentName<span class=\"token operator\">=</span><span class=\"token string\">'scrape-terminating-instance-logs'</span><span class=\"token punctuation\">,</span>\n        TimeoutSeconds<span class=\"token operator\">=</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span>\n        Comment<span class=\"token operator\">=</span><span class=\"token string\">'scrape log lines and other auditing info'</span><span class=\"token punctuation\">,</span>\n        Parameters<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        OutputS3BucketName<span class=\"token operator\">=</span><span class=\"token string\">'somebucket'</span><span class=\"token punctuation\">,</span>\n        OutputS3KeyPrefix<span class=\"token operator\">=</span><span class=\"token string\">'terminated_instance_logs/'</span> <span class=\"token operator\">+</span> asg_name\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># remove dates that are break json serialization</span>\n    response<span class=\"token punctuation\">[</span><span class=\"token string\">'Command'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">\"RequestedDateTime\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n    response<span class=\"token punctuation\">[</span><span class=\"token string\">'Command'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token string\">\"ExpiresAfter\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> response</code></pre></div>\n<p>The above lambda method will trigger the SSM function every time an event occurs, it can also be updated to trigger\nany clean up function needed.</p>\n<p>If you read the above lambda method, you will notice that I set the SSM client to output the results to a s3 bucket,\nthis bucket can then be accessed anytime to read the last bit of logs prior to the instance terminating.</p>","frontmatter":{"title":"Trigger Lambda on Instance Termination.","date":"July 11, 2016"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2016-07-11-trigger-lambda-on-instance-termination/","previous":{"fields":{"slug":"/2016-07-07-vim-save-as-sudo/"},"frontmatter":{"title":"Vim Save as Sudo"}},"next":{"fields":{"slug":"/2016-11-26-setup-ssl-on-heroku-with-letsencrypt/"},"frontmatter":{"title":"Setup SSL on Heroku with letsencrypt and Rails"}}}}}