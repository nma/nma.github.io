<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Nick Ma's Blog</title>
        <description>Nick Ma's Blog - Nick Ma</description>
        <link>http://www.nickma.com</link>
        <link>http://www.nickma.com</link>
        <lastBuildDate>2014-07-10T15:59:09-04:00</lastBuildDate>
        <pubDate>2014-07-10T15:59:09-04:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>Wordpress on Dokku with Vagrant Devo.</title>
                <description>&lt;p&gt;For a new project I am taking on, I wanted to have my own Platform as a Service (PaaS) that has a git push deploy hook like Heroku. There are a few open source projects out there that are currently trying to replicate Heroku, such as &lt;a href=&quot;https://github.com/flynn/flynn&quot;&gt;Flynn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Flynn is trying to become an open source Heroku replacement, but it has too many features that are overkill for our simple applications. I only want the git push deploy for now, this is where &lt;a href=&quot;https://github.com/progrium/dokku&quot;&gt;Dokku&lt;/a&gt; comes in.&lt;/p&gt;

&lt;p&gt;Dokku is a very hackable and has very small code base, making it much easier to understand. I plan to use Vagrant to setup a local Dokku instance.&lt;/p&gt;

&lt;p&gt;To start a development environment I choose to use Vagrant, which is a tool that wraps development environments inside a virtual machine using VirtualBox, VMware, and AWS, and etc. (Full list on the official Vagrant docs). After a few attempts fiddling with my own opts and constantly being hit with . The first step is to install Vagrant and the virtual machine provider (VirtualBox in my case), the installation will vary, so make sure to check the Vagrant docs for your platform.&lt;/p&gt;

&lt;p&gt;I am currently reading the book &lt;a href=&quot;http://www.amazon.com/gp/product/1449335837/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=1449335837&amp;amp;linkCode=as2&amp;amp;tag=nisbl00c-20&amp;amp;linkId=E3QWJ4CWFM7XNHFW&quot;&gt;Vagrant: Up and Running&lt;/a&gt; to learn Vagrant as I go along. This is a pretty detailed book written by the author of Vagrant, it contains all the details you need to start using Vagrant properly. If bedside reading is not your thing, don’t worry, this tutorial provides a Vagrant configuration so you don’t need to touch anything.&lt;/p&gt;

&lt;h3 id=&quot;what_you_need&quot;&gt;What You Need&lt;/h3&gt;

&lt;p&gt;Before we begin our tutorial, please make sure you have the following installed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;Virtualbox&lt;/a&gt; (or any other provider supported by Vagrant)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can go on their official webpages for most troubleshooting information.&lt;/p&gt;

&lt;h3 id=&quot;vagrant_developement_setup&quot;&gt;Vagrant Developement Setup&lt;/h3&gt;

&lt;p&gt;We first get our working folder setup, then setup our Vagrant.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;git clone https://github.com/mhoofman/wordpress-heroku wp-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;&lt;span class='nb'&gt;cd &lt;/span&gt;wp-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Following up, we setup our devo environment.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='nv'&gt;$ &lt;/span&gt;vagrant init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should now see a file called &lt;a href=&quot;https://docs.vagrantup.com/v2/vagrantfile/index.html&quot;&gt;Vagrantfile&lt;/a&gt; in your project directory. Which is a configuration file for launching and provisioning VMs. Next we will use the following configuration to setup our devo environment.&lt;/p&gt;

&lt;p&gt;The following configuration file is modified from the Dokku project repo, which will allow us to configure our virtual machine.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='no'&gt;VAGRANTFILE_API_VERSION&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;2&amp;quot;&lt;/span&gt;

&lt;span class='c1'&gt;# locate requisite ENV variables or default&lt;/span&gt;
&lt;span class='no'&gt;BOX_NAME&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;ENV&lt;/span&gt;&lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;BOX_NAME&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt; &lt;span class='o'&gt;||&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;trusty32&amp;quot;&lt;/span&gt;
&lt;span class='no'&gt;BOX_URI&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;ENV&lt;/span&gt;&lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;BOX_URI&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt; &lt;span class='o'&gt;||&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box&amp;quot;&lt;/span&gt; 
&lt;span class='no'&gt;BOX_MEMORY&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;ENV&lt;/span&gt;&lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;BOX_MEMORY&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt; &lt;span class='o'&gt;||&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;512&amp;quot;&lt;/span&gt;
&lt;span class='no'&gt;DOKKU_DOMAIN&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;ENV&lt;/span&gt;&lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;DOKKU_DOMAIN&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt; &lt;span class='o'&gt;||&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;dokku.me&amp;quot;&lt;/span&gt;
&lt;span class='no'&gt;DOKKU_IP&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;ENV&lt;/span&gt;&lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;DOKKU_IP&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt; &lt;span class='o'&gt;||&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;10.0.0.2&amp;quot;&lt;/span&gt;

&lt;span class='no'&gt;Vagrant&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;configure&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='no'&gt;VAGRANTFILE_API_VERSION&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt; &lt;span class='o'&gt;|&lt;/span&gt;&lt;span class='n'&gt;config&lt;/span&gt;&lt;span class='o'&gt;|&lt;/span&gt;
  &lt;span class='c1'&gt;# define the vm box we need to use to config dokku&lt;/span&gt;
  &lt;span class='n'&gt;config&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;vm&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;box&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;BOX_NAME&lt;/span&gt;
  
  &lt;span class='c1'&gt;# tell vagrant where to find the box if it can&amp;#39;t locate it by the name&lt;/span&gt;
  &lt;span class='n'&gt;config&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;vm&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;box_url&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;BOX_URI&lt;/span&gt;

  &lt;span class='c1'&gt;# tells vagrant to sync this folder with /root/dokku/ on the virtual machine &lt;/span&gt;
  &lt;span class='n'&gt;config&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;vm&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;synced_folder&lt;/span&gt; &lt;span class='no'&gt;File&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;dirname&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='bp'&gt;__FILE__&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;/root/dokku&amp;quot;&lt;/span&gt;

  &lt;span class='c1'&gt;# configure the vm to forward its 80 port to 8080&lt;/span&gt;
  &lt;span class='n'&gt;config&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;vm&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;network&lt;/span&gt; &lt;span class='ss'&gt;:forwarded_port&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;guest&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='mi'&gt;80&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;host&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='mi'&gt;8080&lt;/span&gt;

  &lt;span class='c1'&gt;# configure the vm&amp;#39;s name&lt;/span&gt;
  &lt;span class='n'&gt;config&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;vm&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;hostname&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;&lt;span class='si'&gt;#{&lt;/span&gt;&lt;span class='no'&gt;DOKKU_DOMAIN&lt;/span&gt;&lt;span class='si'&gt;}&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;&lt;/span&gt;

  &lt;span class='c1'&gt;# From Vagrant doc&amp;#39;s: &lt;/span&gt;
  &lt;span class='c1'&gt;# Private networks allow you to access your guest machine only from your own machine &lt;/span&gt;
  &lt;span class='c1'&gt;# disallows public accessible, specify ip to your DOKKU_IP&lt;/span&gt;
  &lt;span class='n'&gt;config&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;vm&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;network&lt;/span&gt; &lt;span class='ss'&gt;:private_network&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;ip&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;DOKKU_IP&lt;/span&gt;

  &lt;span class='c1'&gt;# tell vagrant to use virtualbox for our purposes, &lt;/span&gt;
  &lt;span class='c1'&gt;# we can have multiple provider blocks for as many providers as we need.&lt;/span&gt;
  &lt;span class='n'&gt;config&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;vm&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;provider&lt;/span&gt; &lt;span class='ss'&gt;:virtualbox&lt;/span&gt; &lt;span class='k'&gt;do&lt;/span&gt; &lt;span class='o'&gt;|&lt;/span&gt;&lt;span class='n'&gt;vb&lt;/span&gt;&lt;span class='o'&gt;|&lt;/span&gt;
    &lt;span class='c1'&gt;# this option makes the NAT engine use the host&amp;#39;s resolver mechanisms to handle DNS requests &lt;/span&gt;
    &lt;span class='c1'&gt;# which essentially means that we can specify domain &amp;quot;dokku.me&amp;quot; to be resolved by our local hosts file &lt;/span&gt;
    &lt;span class='n'&gt;vb&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;customize&lt;/span&gt; &lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;modifyvm&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;:id&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;--natdnshostresolver1&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;on&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt;
    &lt;span class='c1'&gt;# set the memory of the virtualbox&lt;/span&gt;
    &lt;span class='n'&gt;vb&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;customize&lt;/span&gt; &lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;modifyvm&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='ss'&gt;:id&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;--memory&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='no'&gt;BOX_MEMORY&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
  
  &lt;span class='c1'&gt;# no vagrant provisioning because we setup Dokku and let it provision our wp-app for us.&lt;/span&gt;
  &lt;span class='c1'&gt;# install Dokku on the vagrant vm with bootstrap.sh.&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next we create a bash script to bootstrap our Vagrant machine. Using a script creates a deterministic provisioning process to avoid future headaches. Create a file called bootstrap.sh with the following contents.&lt;/p&gt;

&lt;p&gt;bootstrap.sh&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;&lt;span class='c'&gt;#!/bin/bash&lt;/span&gt;

&lt;span class='c'&gt;# reference of bootstrap.sh of https://github.com/RyanBalfanz/dokku-vagrant-example&lt;/span&gt;

&lt;span class='c'&gt;# add our envs&lt;/span&gt;
&lt;span class='nv'&gt;DB_PLUGIN&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;postgresql

&lt;span class='c'&gt;# setup the vmachine if it hasn&amp;#39;t been done already&lt;/span&gt;
vagrant up

&lt;span class='c'&gt;# run commands to build Dokku on our vagrant box&lt;/span&gt;
&lt;span class='c'&gt;# vagrant ssh will automagtocally open up an interactive terminal to our vm.&lt;/span&gt;
&lt;span class='c'&gt;# the &amp;#39;--&amp;#39; means the end of a command, so vagrant ssh will not take any more arguments.&lt;/span&gt;
&lt;span class='c'&gt;# once we vagrant ssh, we install Dokku (commands from the Dokku github page).&lt;/span&gt;
vagrant ssh -- &lt;span class='s2'&gt;&amp;quot;wget -qO- https://raw.github.com/progrium/dokku/v0.2.3/bootstrap.sh | sudo DOKKU_TAG=v0.2.3 bash&amp;quot;&lt;/span&gt;

&lt;span class='c'&gt;# run commands to install our Dokku postgresql plugin &lt;/span&gt;
&lt;span class='nv'&gt;PLUGIN_FOUND&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;&lt;span class='sb'&gt;`&lt;/span&gt;vagrant ssh -- &lt;span class='s2'&gt;&amp;quot;test -d /var/lib/dokku/plugins/${DB_PLUGIN} &amp;amp;&amp;amp; echo 0 || echo 1&amp;quot;&lt;/span&gt;&lt;span class='sb'&gt;`&lt;/span&gt;
&lt;span class='k'&gt;if&lt;/span&gt; &lt;span class='o'&gt;[&lt;/span&gt; &lt;span class='k'&gt;${&lt;/span&gt;&lt;span class='nv'&gt;PLUGIN_FOUND&lt;/span&gt;&lt;span class='k'&gt;}&lt;/span&gt; -eq 0 &lt;span class='o'&gt;]&lt;/span&gt;&lt;span class='p'&gt;;&lt;/span&gt; &lt;span class='k'&gt;then&lt;/span&gt;
&lt;span class='k'&gt;    &lt;/span&gt;&lt;span class='nb'&gt;echo&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;${DB_PLUGIN} plugin found! Skipping installation.&amp;quot;&lt;/span&gt; 
&lt;span class='k'&gt;else&lt;/span&gt;
&lt;span class='k'&gt;    &lt;/span&gt;&lt;span class='nb'&gt;echo&lt;/span&gt; &lt;span class='s2'&gt;&amp;quot;${DB_PLUGIN} plugin does not exist! Installing...&amp;quot;&lt;/span&gt;
    &lt;span class='c'&gt;# install ${DB_PLUGIN} plugin on our Dokku, commands from the plugin github page.&lt;/span&gt;
    vagrant ssh -- &lt;span class='s2'&gt;&amp;quot;cd /var/lib/dokku/plugins &amp;amp;&amp;amp; sudo git clone https://github.com/Kloadut/dokku-pg-plugin ${DB_PLUGIN} &amp;amp;&amp;amp; sudo dokku plugins-install&amp;quot;&lt;/span&gt;
&lt;span class='k'&gt;fi&lt;/span&gt;

&lt;span class='c'&gt;# pass our public key to the dokku machine, this allows us to git push deploy&lt;/span&gt;
cat ~/.ssh/id_rsa.pub &lt;span class='p'&gt;|&lt;/span&gt; vagrant ssh -- sudo sshcommand acl-add dokku &lt;span class='k'&gt;${&lt;/span&gt;&lt;span class='nv'&gt;USER&lt;/span&gt;&lt;span class='k'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point your file structure should look like this.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;$ ls 
   |- .git
   |- .htaccess
   |- .vagrant
   |- README.md
   |- Vagrantfile  &amp;lt;-- 
   |- bootstrap.sh &amp;lt;-- 
   |- index.php
   |- ... etc wp files ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next we make bootstrap.sh executable and run it.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;$ chmod +x bootstrap.sh
$ ./bootstrap.sh
$ ... etc Vagrant output ... 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will take a while for the bootstrapper to install and configure vagrant.&lt;/p&gt;

&lt;p&gt;So I highly recommend you go view a &lt;a href=&quot;http://progrium.com/blog/2013/06/19/dokku-the-smallest-paas-implementation-youve-ever-seen/&quot;&gt;video on how Dokku works&lt;/a&gt; by the creator. By the time you finish checking out the video your vagrant vm should be provisioned and you should be ready to push to your devo.&lt;/p&gt;

&lt;h3 id=&quot;preparing_to_deploy_to_devo&quot;&gt;Preparing to Deploy to Devo&lt;/h3&gt;

&lt;p&gt;Since we have set our Vagrant config to resolve domains to our native hosts file, we define a few host entries in /etc/hosts.&lt;/p&gt;

&lt;p&gt;/etc/hosts&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;# for local dokku deploy
10.0.0.2    dokku.me
10.0.0.2    wp-app.dokku.me
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, we prepare to deploy our app.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;$ git remote add devo dokku@dokku.me:wp-app
$ git push devo master 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;Counting objects: 5127, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2643/2643), done.
Writing objects: 100% (5127/5127), 15.12 MiB | 17.37 MiB/s, done.
Total 5127 (delta 2403), reused 5114 (delta 2395)
-----&amp;gt; Cleaning up ...
remote: Cloning into &amp;#39;/tmp/tmp.QbyOZK2Zde&amp;#39;...
-----&amp;gt; Building wp-app ...
remote: warning: You appear to have cloned an empty repository.
remote: done.
remote: HEAD is now at 2b0ea36... copied over dokku devo vagrantfile.
       PHP (classic) app detected
-----&amp;gt; Bundling NGINX 1.4.4
-----&amp;gt; Bundling PHP 5.5.9
-----&amp;gt; Bundling extensions
       apcu
       phpredis
       mongo
-----&amp;gt; Setting up default configuration
-----&amp;gt; Vendoring binaries into slug
-----&amp;gt; Discovering process types
       Default process types for PHP (classic) -&amp;gt; web
-----&amp;gt; Releasing wp-app ...
-----&amp;gt; Deploying wp-app ...
=====&amp;gt; Application deployed:
       http://wp-app.dokku.me

To dokku@dokku.me:wp-app
 * [new branch]      master -&amp;gt; master 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&quot;setting_up_our_database&quot;&gt;Setting Up Our Database&lt;/h4&gt;

&lt;p&gt;Before we proceed to test our instance we want a database, so we run some Dokku postgresql commands to create one.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;$ ssh dokku@dokku.me postgresql:create wp-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;-----&amp;gt; Creating /home/dokku/wp-app/ENV
-----&amp;gt; Setting config vars and restarting wp-app
DATABASE_URL: postgres://root:ZwCRrphjiQYJ1Pvx@172.17.42.1:49154/db
-----&amp;gt; Releasing wp-app ...
-----&amp;gt; Release complete!
-----&amp;gt; Deploying wp-app ...
-----&amp;gt; Checking status of PostgreSQL
       Found image postgresql/wp-app database
       Checking status... ok.
-----&amp;gt; Deploy complete!

-----&amp;gt; wp-app linked to postgresql/wp-app database

-----&amp;gt; PostgreSQL container created: postgresql/wp-app

       Host: 172.17.42.1
       Port: 49154
       User: &amp;#39;root&amp;#39;
       Password: &amp;#39;ZwCRrphjiQYJ1Pvx&amp;#39;
       Database: &amp;#39;db&amp;#39;

       Url: &amp;#39;postgres://root:ZwCRrphjiQYJ1Pvx@172.17.42.1:49154/db&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: Docs for plugin we used for this tutorial can be found here &lt;a href=&quot;https://github.com/Kloadut/dokku-pg-plugin&quot;&gt;Kloadut/dokku-pg-plugin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then update Dokku with the environment variable.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;$ ssh dokku@dokku.me postgresql:link wp-app wp-app 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;-----&amp;gt; Setting config vars and restarting wp-app
DATABASE_URL: postgres://root:ZwCRrphjiQYJ1Pvx@172.17.42.1:49154/db 
-----&amp;gt; Releasing wp-app ...
-----&amp;gt; Release complete!
-----&amp;gt; Deploying wp-app ...
-----&amp;gt; Checking status of PostgreSQL
       Found image postgresql/wp-app database
       Checking status... ok.
-----&amp;gt; Deploy complete!

-----&amp;gt; wp-app linked to postgresql/wp-app database
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then do the same for the application environment variables.&lt;/p&gt;

&lt;h4 id=&quot;setup_application_environment_variables&quot;&gt;Setup Application Environment Variables&lt;/h4&gt;

&lt;p&gt;Store unique keys and salts in Dokku environment variables. Wordpress can provide random values &lt;a href=&quot;https://api.wordpress.org/secret-key/1.1/salt/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;# You can upload all the variables with one config:set command, but I broke them out for clarity.
# Due to the way Dokku parses config:set key, value pairs, make sure you wrap the values in escaped quotes (\&amp;#39;&amp;#39;&amp;lt;your value here.
#&amp;gt;&amp;#39;\&amp;#39;) e.g. AUTH_KEY=&amp;#39;&amp;lt;your key&amp;gt;&amp;#39; should be AUTH_KEY=\&amp;#39;&amp;#39;&amp;lt;your key&amp;gt;&amp;#39;\&amp;#39;. 

ssh dokku@dokku.me config:set wp-app AUTH_KEY=\&amp;#39;&amp;#39;&amp;lt;your value here&amp;gt;&amp;#39;\&amp;#39;
ssh dokku@dokku.me config:set wp-app SECURE_AUTH_KEY=\&amp;#39;&amp;#39;&amp;lt;your value here&amp;gt;&amp;#39;\&amp;#39;
ssh dokku@dokku.me config:set wp-app LOGGED_IN_KEY=\&amp;#39;&amp;#39;&amp;lt;your value here&amp;gt;&amp;#39;\&amp;#39;
ssh dokku@dokku.me config:set wp-app NONCE_KEY=\&amp;#39;&amp;#39;&amp;lt;your value here&amp;gt;&amp;#39;\&amp;#39;
ssh dokku@dokku.me config:set wp-app AUTH_SALT=\&amp;#39;&amp;#39;&amp;lt;your value here&amp;gt;&amp;#39;\&amp;#39;
ssh dokku@dokku.me config:set wp-app SECURE_AUTH_SALT=\&amp;#39;&amp;#39;&amp;lt;your value here&amp;gt;&amp;#39;\&amp;#39;
ssh dokku@dokku.me config:set wp-app LOGGED_IN_SALT=\&amp;#39;&amp;#39;&amp;lt;your value here&amp;gt;&amp;#39;\&amp;#39;
ssh dokku@dokku.me config:set wp-app NONCE_SALT=\&amp;#39;&amp;#39;&amp;lt;your value here&amp;gt;&amp;#39;\&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One thing we need to do before the database will connect is to edit wp-config.php to accept a port parameter for our psql.&lt;/p&gt;

&lt;p&gt;wp-config.php&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='php'&gt;&lt;span class='cp'&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class='c1'&gt;// ** Heroku Postgres settings - from Heroku Environment ** //&lt;/span&gt;
&lt;span class='nv'&gt;$db&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='nb'&gt;parse_url&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nv'&gt;$_ENV&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;DATABASE_URL&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;]);&lt;/span&gt;

&lt;span class='c1'&gt;// ** MySQL settings - You can get this info from your web host ** //&lt;/span&gt;
&lt;span class='sd'&gt;/** The name of the database for WordPress */&lt;/span&gt;
&lt;span class='nb'&gt;define&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;DB_NAME&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nx'&gt;trim&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nv'&gt;$db&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;path&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;],&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;));&lt;/span&gt;

&lt;span class='sd'&gt;/** MySQL database username */&lt;/span&gt;
&lt;span class='nb'&gt;define&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;DB_USER&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nv'&gt;$db&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;user&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;]);&lt;/span&gt;

&lt;span class='sd'&gt;/** MySQL database password */&lt;/span&gt;
&lt;span class='nb'&gt;define&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;DB_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nv'&gt;$db&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;]);&lt;/span&gt;

&lt;span class='sd'&gt;/** MySQL hostname */&lt;/span&gt;
&lt;span class='nb'&gt;define&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s1'&gt;&amp;#39;DB_HOST&amp;#39;&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='nv'&gt;$db&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;host&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;]&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='nv'&gt;$db&lt;/span&gt;&lt;span class='p'&gt;[&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;port&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;]);&lt;/span&gt;  &lt;span class='c1'&gt;// &amp;lt;---- add .&amp;quot;:&amp;quot;.$db[&amp;quot;port&amp;quot;]&lt;/span&gt;

&lt;span class='o'&gt;...&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Update the changes in a new branch.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;$ git checkout -b wp-app-devo
$ git add wp-config.php
$ git commit -m &amp;quot;added db port to wp-config.php&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='text'&gt;$ git push devo wp-app-devo:master
---&amp;gt; app updates...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you should have a working local environment for you wordpress application to run.&lt;/p&gt;

&lt;p&gt;Test it out at &lt;a href=&quot;http://wp-app.dokku.me&quot;&gt;http://wp-app.dokku.me&lt;/a&gt;. Yata!&lt;/p&gt;

&lt;h3 id=&quot;production_setup_bonus&quot;&gt;Production Setup (Bonus)&lt;/h3&gt;

&lt;p&gt;This post mainly focuses on how to use Vagrant to setup a manageable Dokku developement stack. It is recommended that you play with the local stack to get a feel for how Dokku works before committing to a production stack. This section will just be a quickstart guide for production environments, so I assume you have working knowledge of git and setting up a VPS with a Dokku installation.&lt;/p&gt;

&lt;p&gt;The easiest way to get a Dokku host is by following a &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-the-dokku-one-click-digitalocean-image-to-run-a-node-js-app&quot;&gt;1-click setup on digitalocean&lt;/a&gt;. You can also setup Dokku on any server with root access, just follow the instructions listed on the installation readme on &lt;a href=&quot;https://github.com/progrium/dokku&quot;&gt;Dokku&lt;/a&gt;. The steps to setup a working application should be the same.&lt;/p&gt;</description>
                <link>http://www.nickma.com/tutorial/2014/07/02/wordpress-on-dokku-with-vagrant-devo</link>
                <guid>http://www.nickma.com/tutorial/2014/07/02/wordpress-on-dokku-with-vagrant-devo</guid>
                <pubDate>2014-07-02T00:00:00-04:00</pubDate>
        </item>


</channel>
</rss>
